#!/usr/bin/env python
import rospy

import tf

import tf2_ros
import geometry_msgs.msg

if __name__ == '__main__':
        rospy.init_node('pose_tf_broadcaster')
        module_name = "/interpreters"
        ns = module_name
        config_goal = ns + "/goal"

        broadcaster = tf2_ros.StaticTransformBroadcaster()
        static_transformStamped = geometry_msgs.msg.TransformStamped()
        static_transformStamped.header.stamp = rospy.Time.now()
        static_transformStamped.header.frame_id = rospy.get_param(config_goal + '/frame_id')
        static_transformStamped.child_frame_id = rospy.get_param(config_goal + '/child_frame_id')

        static_transformStamped.transform.translation.x = rospy.get_param(config_goal + '/position/x')
        static_transformStamped.transform.translation.y = rospy.get_param(config_goal + '/position/y')
        static_transformStamped.transform.translation.z = rospy.get_param(config_goal + '/position/z')

        quat = tf.transformations.quaternion_from_euler(
                   float(0),float(0),float(rospy.get_param(config_goal + '/yaw')))
        static_transformStamped.transform.rotation.x = quat[0]
        static_transformStamped.transform.rotation.y = quat[1]
        static_transformStamped.transform.rotation.z = quat[2]
        static_transformStamped.transform.rotation.w = quat[3]

        broadcaster.sendTransform(static_transformStamped)
        rospy.spin()